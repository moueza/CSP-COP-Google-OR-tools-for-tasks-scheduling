package(default_visibility = ["//ortools/math_opt:__subpackages__"])

cc_library(
    name = "gscip_solver",
    srcs = [
        "gscip_solver.cc",
        "gscip_solver.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":gscip_solver_callback",
        "//ortools/base",
        "//ortools/base:map_util",
        "//ortools/base:protoutil",
        "//ortools/base:status_macros",
        "//ortools/gscip",
        "//ortools/gscip:gscip_cc_proto",
        "//ortools/gscip:gscip_parameters",
        "//ortools/linear_solver:scip_with_glop",
        "//ortools/math_opt:callback_cc_proto",
        "//ortools/math_opt:math_opt_proto_utils",
        "//ortools/math_opt:model_cc_proto",
        "//ortools/math_opt:model_parameters_cc_proto",
        "//ortools/math_opt:model_update_cc_proto",
        "//ortools/math_opt:parameters_cc_proto",
        "//ortools/math_opt:result_cc_proto",
        "//ortools/math_opt:solution_cc_proto",
        "//ortools/math_opt:solver_interface",
        "//ortools/math_opt:sparse_containers_cc_proto",
        "//ortools/math_opt:sparse_vector_view",
        "//ortools/port:proto_utils",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/time",
        "@com_google_absl//absl/types:optional",
        "@com_google_absl//absl/types:span",
    ],
    alwayslink = 1,
)

cc_library(
    name = "gurobi_callback",
    srcs = ["gurobi_callback.cc"],
    hdrs = ["gurobi_callback.h"],
    deps = [
        ":message_callback_data",
        "//ortools/base",
        "//ortools/base:linked_hash_map",
        "//ortools/base:protoutil",
        "//ortools/base:status_macros",
        "//ortools/gurobi:environment",
        "//ortools/math_opt:callback_cc_proto",
        "//ortools/math_opt:math_opt_proto_utils",
        "//ortools/math_opt:solution_cc_proto",
        "//ortools/math_opt:solver_interface",
        "//ortools/math_opt:sparse_containers_cc_proto",
        "//ortools/math_opt:sparse_vector_view",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/time",
        "@com_google_absl//absl/types:optional",
        "@com_google_absl//absl/types:span",
    ],
)

cc_library(
    name = "gurobi_solver",
    srcs = [
        "gurobi_solver.cc",
        "gurobi_solver.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":gurobi_callback",
        ":message_callback_data",
        "//ortools/base",
        "//ortools/base:linked_hash_map",
        "//ortools/base:map_util",
        "//ortools/base:protoutil",
        "//ortools/base:status_macros",
        "//ortools/gurobi:environment",
        "//ortools/math_opt:callback_cc_proto",
        "//ortools/math_opt:math_opt_proto_utils",
        "//ortools/math_opt:model_cc_proto",
        "//ortools/math_opt:model_parameters_cc_proto",
        "//ortools/math_opt:model_update_cc_proto",
        "//ortools/math_opt:parameters_cc_proto",
        "//ortools/math_opt:result_cc_proto",
        "//ortools/math_opt:solution_cc_proto",
        "//ortools/math_opt:solver_interface",
        "//ortools/math_opt:sparse_containers_cc_proto",
        "//ortools/math_opt:sparse_vector_view",
        "//ortools/port:proto_utils",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/time",
        "@com_google_absl//absl/types:span",
    ],
    alwayslink = 1,
)

cc_library(
    name = "glop_solver",
    srcs = [
        "glop_solver.cc",
        "glop_solver.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//ortools/base",
        "//ortools/base:int_type",
        "//ortools/base:map_util",
        "//ortools/base:protoutil",
        "//ortools/base:status_macros",
        "//ortools/base:strong_vector",
        "//ortools/glop:lp_solver",
        "//ortools/glop:parameters_cc_proto",
        "//ortools/lp_data",
        "//ortools/lp_data:base",
        "//ortools/math_opt:callback_cc_proto",
        "//ortools/math_opt:math_opt_proto_utils",
        "//ortools/math_opt:model_cc_proto",
        "//ortools/math_opt:model_parameters_cc_proto",
        "//ortools/math_opt:model_update_cc_proto",
        "//ortools/math_opt:parameters_cc_proto",
        "//ortools/math_opt:result_cc_proto",
        "//ortools/math_opt:solution_cc_proto",
        "//ortools/math_opt:solver_interface",
        "//ortools/math_opt:sparse_containers_cc_proto",
        "//ortools/math_opt:sparse_vector_view",
        "//ortools/port:proto_utils",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/time",
        "@com_google_absl//absl/types:span",
    ],
    alwayslink = 1,
)

cc_library(
    name = "cp_sat_solver",
    srcs = [
        "cp_sat_solver.cc",
        "cp_sat_solver.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//ortools/base",
        "//ortools/base:protoutil",
        "//ortools/base:status_macros",
        "//ortools/linear_solver:linear_solver_cc_proto",
        # For sat_proto_solver.h/cc, this needs to be broken up.
        "//ortools/linear_solver",
        "//ortools/math_opt:callback_cc_proto",
        "//ortools/math_opt:math_opt_proto_utils",
        "//ortools/math_opt:model_cc_proto",
        "//ortools/math_opt:model_parameters_cc_proto",
        "//ortools/math_opt:model_update_cc_proto",
        "//ortools/math_opt:parameters_cc_proto",
        "//ortools/math_opt:proto_converter",
        "//ortools/math_opt:result_cc_proto",
        "//ortools/math_opt:solution_cc_proto",
        "//ortools/math_opt:solver_interface",
        "//ortools/math_opt:sparse_containers_cc_proto",
        "//ortools/port:proto_utils",
        "//ortools/sat:sat_parameters_cc_proto",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/time",
    ],
    alwayslink = 1,
)

cc_library(
    name = "message_callback_data",
    srcs = ["message_callback_data.cc"],
    hdrs = ["message_callback_data.h"],
    deps = [
        "//ortools/math_opt:callback_cc_proto",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
    ],
)

cc_library(
    name = "gscip_solver_callback",
    srcs = ["gscip_solver_callback.cc"],
    hdrs = ["gscip_solver_callback.h"],
    deps = [
        ":message_callback_data",
        "//ortools/base",
        "//ortools/base:protoutil",
        "//ortools/base:status_macros",
        "//ortools/gscip",
        "//ortools/gscip:gscip_message_handler",
        "//ortools/linear_solver:scip_helper_macros",
        "//ortools/linear_solver:scip_with_glop",
        "//ortools/math_opt:callback_cc_proto",
        "//ortools/math_opt:math_opt_proto_utils",
        "//ortools/math_opt:solver_interface",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
        "@com_google_absl//absl/time",
        "@com_google_absl//absl/types:optional",
    ],
)
